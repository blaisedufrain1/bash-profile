#!/usr/env/bash

function parseArguments {
    args=""
    for var in  "$@"
    do
      args="$args $var"
    done
    echo $args
}

function dcexec {
  args=$(parseArguments "$@")
  echo $args;
  docker-compose exec -T --user laradock workspace $args
}

function dcRequire {
  args=$(parseArguments "$@")
  dcexec composer require $args
}

function dartisan {
  base="php artisan"
  args=$(parseArguments "$@")
  docker-compose exec -T --user laradock workspace $base $args
}

function behat {
  args=$(parseArguments "$@")
  ./vendor/bin/behat $args --no-snippets
}

function gg {
  cd $projectPath
  if [ $# -ne 0 ]
    then
    for arg in $*
    do
      newDir=$(find ./* -not -path '*/\.*' -maxdepth 4 -type d | grep $arg | grep -v "test" | sort | head -1)
      echo "Navigating to " $projectPath/$newDir
      cd $newDir
    done
  fi
}

function search {
  if [ $# -ne 0 ]
    then
    for arg in $*
    do
      newDir=$(find $projectPath/* -not -path '*/\.*' | grep $arg | grep -v "test" | sort)
    done
  fi
}

function vimConfig {
  vim  ~/.vimrc
}
function bashConfig {
  vim  ~/.profile
}
function sourceVim {
  source ~/.vimrc
}
function sourceBash {
  source ~/.profile
}

function metrics {
  phpmetrics --report-html=phpmetricsreport $*
}

function pubKey {
    cat ~/.ssh/id_rsa.pub | pbcopy
    echo "Copied public key to clipboard"
}

## Function used to stash incrementally a specified number of commits. 
#This is effectively a reset that keeps the commits segmented
function stashBack() {
  for i in $(eval echo {1..$1})
  do
    MESSAGE=$(git log -1 --pretty=%B)
    echo "stashing commit with message $MESSAGE"
    git reset HEAD~1
    git add .
    git stash push -m "$MESSAGE"
  done
}

function get {
  if [[ $# -lt 2 ]];then
    echo "Please specify a remote and branch name" 
  elif [[ $# -eq 2 ]];then
    git fetch $1 $2 && git checkout -b $2 FETCH_HEAD 
  else
    git fetch git@github.com:$1/$2.git $3 && git checkout -b $3 FETCH_HEAD 
  fi
}

function gitCreated {
  echo "The file $1 was created in this commit\n"
  git bro --reverse -- $1 | head -1
}
export -f gitCreated

function showFilesModified {
 git diff-tree --no-commit-id --name-only -r $1 
}
